# syntax=docker/dockerfile:1.7
ARG PYTHON_VERSION=3.11-slim
FROM python:${PYTHON_VERSION} AS base
ENV PYTHONDONTWRITEBYTECODE=1 PYTHONUNBUFFERED=1 PIP_NO_CACHE_DIR=1 POETRY_VERSION=1.8.3
RUN apt-get update && apt-get install -y --no-install-recommends build-essential curl git && rm -rf /var/lib/apt/lists/*
RUN curl -sSL https://install.python-poetry.org | python - --version $POETRY_VERSION && ln -s /root/.local/bin/poetry /usr/local/bin/poetry
WORKDIR /app
COPY pyproject.toml README.md ./
RUN poetry config virtualenvs.create false
RUN poetry install --no-interaction --no-ansi --only main
COPY sitecustomize.py ./
COPY src ./src

FROM base AS dev
RUN poetry install --no-interaction --no-ansi
CMD ["python", "-m", "fks_worker.main"]

FROM python:${PYTHON_VERSION} AS prod
ENV PYTHONDONTWRITEBYTECODE=1 PYTHONUNBUFFERED=1
WORKDIR /app
COPY --from=base /usr/local/lib/python*/ /usr/local/lib/python*/
COPY --from=base /usr/local/bin/ /usr/local/bin/
COPY --from=base /app /app
EXPOSE 8001
HEALTHCHECK --interval=30s --timeout=3s CMD python -c "import urllib.request,os,sys;url=f'http://localhost:{os.getenv('WORKER_SERVICE_PORT','8001')}/health';urllib.request.urlopen(url).read()[:10] or sys.exit(1)" || exit 1
ENTRYPOINT ["python", "-m", "fks_worker.main"]
